#!/bin/bash

set -e

svc_cat_manifests="manifests/service-catalog"
svc_cat_ns="catalog"
svc_cat_api="catalog-apiserver"

base64_cmd="base64 -w 0"
if [[ "$OSTYPE" == "darwin"* ]]; then
	base64_cmd="base64"
fi

kubectl apply -f ${svc_cat_manifests}/00-namespace.yaml

## Generate pki
mkdir -p /tmp/svc-cat-cert
openssl req \
    -newkey rsa:4096 \
    -x509 \
    -nodes \
    -keyout /tmp/svc-cat-cert/key.pem \
    -new \
    -out /tmp/svc-cat-cert/cert.pem \
    -subj /CN=dev.mycompany.com \
    -reqexts SAN \
    -extensions SAN \
	-config <(cat /etc/ssl/openssl.cnf <(printf "[SAN]\nsubjectAltName=DNS:${svc_cat_api}.${svc_cat_ns},DNS:${svc_cat_api}.${svc_cat_ns}.svc"))\
    -sha256 \
    -days 365


ca_bundle=$(cat /tmp/svc-cat-cert/cert.pem | ${base64_cmd})
kubectl create secret tls catalog-apiserver-cert --cert="/tmp/svc-cat-cert/cert.pem" --key="/tmp/svc-cat-cert/key.pem" -n ${svc_cat_ns}


cat <<EOF > "/tmp/apiregistration.yaml"
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta1.servicecatalog.k8s.io
spec:
  group: servicecatalog.k8s.io
  version: v1beta1
  service:
    namespace: ${svc_cat_ns}
    name: ${svc_cat_api}
  caBundle: "${ca_bundle}"
  groupPriorityMinimum: 10000
  versionPriority: 20
EOF

kubectl apply -f /tmp/apiregistration.yaml

for template in ${svc_cat_manifests}/*; do kubectl apply -f ${template}; done
