---
apiVersion: v1
kind: List
items:

- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: "servicecatalog.k8s.io:apiserver"
  rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs:     ["get", "list", "watch"]

- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: "servicecatalog.k8s.io:apiserver"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: "servicecatalog.k8s.io:apiserver"
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: "service-catalog-apiserver"
    namespace: catalog

- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: "servicecatalog.k8s.io:apiserver-auth-delegator"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:auth-delegator
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: "service-catalog-apiserver"
    namespace: catalog

- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: "servicecatalog.k8s.io:apiserver-authentication-reader"
    namespace: kube-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: extension-apiserver-authentication-reader
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: "service-catalog-apiserver"
    namespace: catalog

- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: "servicecatalog.k8s.io:controller-manager"
  rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs:     ["create","patch","update"]

  - apiGroups: [""]
    resources: ["secrets"]
    verbs:     ["get","create","update","delete"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs:     ["get","list","update", "patch", "watch", "delete", "initialize"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs:     ["get","list","watch"]

  - apiGroups: ["servicecatalog.k8s.io"]
    resources: ["clusterserviceclasses"]
    verbs:     ["get","list","watch","create","patch","update","delete"]
  - apiGroups: ["servicecatalog.k8s.io"]
    resources: ["clusterserviceplans"]
    verbs:     ["get","list","watch","create","patch","update","delete"]
  - apiGroups: ["servicecatalog.k8s.io"]
    resources: ["clusterservicebrokers","serviceinstances","servicebindings"]
    verbs:     ["get","list","watch"]
  - apiGroups: ["servicecatalog.k8s.io"]
    resources: ["clusterservicebrokers/status","clusterserviceclasses/status","clusterserviceplans/status","serviceinstances/status","serviceinstances/reference","servicebindings/status"]
    verbs:     ["update"]

- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: "servicecatalog.k8s.io:controller-manager"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: "servicecatalog.k8s.io:controller-manager"
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: "service-catalog-controller-manager"
    namespace: catalog

- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: "servicecatalog.k8s.io:leader-locking-controller-manager"
    namespace: catalog
  rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs:     ["create"]
  - apiGroups:     [""]
    resources:     ["configmaps"]
    resourceNames: ["service-catalog-controller-manager"]
    verbs:         ["get","update"]

- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: service-catalog-controller-manager
    namespace: catalog
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: "servicecatalog.k8s.io:leader-locking-controller-manager"
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: "service-catalog-controller-manager"
    namespace: catalog
