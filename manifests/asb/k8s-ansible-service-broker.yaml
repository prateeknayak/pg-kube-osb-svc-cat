---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: asb
  namespace: ansible-service-broker

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: asb-auth
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["create", "delete"]
- apiGroups: ["authorization.openshift.io"]
  resources: ["subjectrulesreview"]
  verbs: ["create"]
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["create"]
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["networking.k8s.io", ""]
  attributeRestrictions: null
  resources: ["networkpolicies"]
  verbs: ["create", "delete"]
- apiGroups: ["automationbroker.io"]
  attributeRestrictions: null
  resources: ["bundles", "jobstates", "servicebindings", "serviceinstances"]
  verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: asb-auth-bind
subjects:
- kind: ServiceAccount
  name: asb
  namespace: ansible-service-broker
roleRef:
  kind: ClusterRole
  name: asb-auth
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: asb
subjects:
- kind: ServiceAccount
  name: asb
  namespace: ansible-service-broker
roleRef:
  kind: ClusterRole
  name: admin
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: access-asb-role
rules:
- nonResourceURLs: ["/ansible-service-broker", "/ansible-service-broker/*"]
  verbs: ["get", "post", "put", "patch", "delete"]

---
apiVersion: v1
kind: Secret
metadata:
  name: asb-auth-secret
  namespace: ansible-service-broker
data:
  username: "YWRtaW4="
  password: "YWRtaW4="

---
apiVersion: v1
kind: Service
metadata:
   name: asb
   namespace: ansible-service-broker
   labels:
     app: ansible-service-broker
     service: asb
spec:
  ports:
    - name: port-1338
      port: 1338
      targetPort: 1338
      protocol: TCP
  selector:
    app: ansible-service-broker
    service: asb

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: broker-config
  namespace: ansible-service-broker
  labels:
    app: ansible-service-broker
data:
  broker-config: |
    registry:
      - type: "dockerhub"
        name: "dh"
        url: "https://registry.hub.docker.com"
        org: "ansibleplaybookbundle"
        tag: "latest"
        white_list:
          - ".*-apb$"
    dao:
      type: "crd"
    log:
      logfile: /var/log/ansible-service-broker/asb.log
      stdout: true
      level: debug
      color: true
    openshift:
      host: ""
      ca_file: ""
      bearer_token_file: ""
      image_pull_policy: "IfNotPresent"
      sandbox_role: "edit"
      namespace: ansible-service-broker
      keep_namespace: false
      keep_namespace_on_error: true
    broker:
      dev_broker: true
      bootstrap_on_startup: true
      refresh_interval: "600s"
      launch_apb_on_bind: false
      output_request: true
      recovery: true
      ssl_cert_key: /etc/tls/private/tls.key
      ssl_cert: /etc/tls/private/tls.crt
      auto_escalate: true
      auth:
        - type: basic
          enabled: false

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: asb
  namespace: ansible-service-broker
  labels:
    app: ansible-service-broker
    service: asb
spec:
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        app: ansible-service-broker
        service: asb
    spec:
      serviceAccount: asb
      restartPolicy: Always
      containers:
        - image: "ansibleplaybookbundle/origin-ansible-service-broker:latest"
          name: asb
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config-volume
              mountPath: /etc/ansible-service-broker
            - name: asb-tls
              mountPath: /etc/tls/private
            - name: asb-auth-volume
              mountPath: /var/run/asb-auth
          ports:
            - containerPort: 1338
              protocol: TCP
          env:
          - name: BROKER_CONFIG
            value: "/etc/ansible-service-broker/config.yaml"
          - name: INSECURE
            value: "true"
          resources: {}
          terminationMessagePath: /tmp/termination-log
      volumes:
        - name: config-volume
          configMap:
            name: broker-config
            items:
            - key: broker-config
              path: config.yaml
        - name: asb-tls
          secret:
            secretName: asb-tls
        - name: asb-auth-volume
          secret:
            secretName: asb-auth-secret

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ansibleservicebroker-client
  namespace: ansible-service-broker

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: ansibleservicebroker-client
subjects:
- kind: ServiceAccount
  name: ansibleservicebroker-client
  namespace: ansible-service-broker
roleRef:
  kind: ClusterRole
  name: access-asb-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: Secret
metadata:
  name: ansibleservicebroker-client
  namespace: ansible-service-broker
  annotations:
    kubernetes.io/service-account.name: ansibleservicebroker-client
type: kubernetes.io/service-account-token

# CRDs for the broker.
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: bundles.automationbroker.io
spec:
  group: automationbroker.io
  version: v1
  scope: Namespaced
  names:
    plural: bundles
    singular: bundle
    kind: Bundle
  validation:
   # openAPIV3Schema is the schema for validating custom objects.
    openAPIV3Schema:
      properties:
        spec:
          properties:
            runtime:
              type: integer
              minimum: 1
              maximum: 2
            version:
              type: string
              pattern: '^[\d]+.[\d*]+$'
            fqName:
              type: string
            image:
              type: string
            tags:
              type: array
              items:
                type: string
            bindable:
              type: boolean
            description:
              type: string
            metadata:
              type: string
            async:
              type: string
              pattern: '^(optional|required|unsupported)$'
            plans:
              type: array
              minItems: 1
              items:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  metadata:
                    type: string
                  free:
                    type: boolean
                  bindable:
                    type: boolean
                  updatesTo:
                    type: array
                    items:
                      type: string
                  parameters:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        title:
                          type: string
                        type:
                          type: string
                        description:
                          type: string
                        default:
                          type: string
                        deprecateMaxLength:
                          type: integer
                        maxLength:
                          type: integer
                        minLength:
                          type: integer
                        pattern:
                          type: string
                        multipleOf:
                          type: float
                        maximum:
                          type: float
                        exclusiveMaximum:
                          type: float
                        minimum:
                          type: float
                        exclusiveMinimum:
                          type: float
                        enum:
                          type: array
                        items:
                          type: string
                        required:
                          type: boolean
                        updatable:
                          type: boolean
                        displayType:
                          type: string
                        displayGroup:
                          type: string
                  bindParameters:
                    type: object
                    properties:
                      name:
                        type: string
                      title:
                        type: string
                      type:
                        type: string
                      description:
                        type: string
                      default:
                        type: object
                      deprecateMaxLength:
                        type: integer
                      maxLength:
                        type: integer
                      minLength:
                        type: integer
                      pattern:
                        type: string
                      multipleOf:
                        type: float
                      maximum:
                        type: float
                      exclusiveMaximum:
                        type: float
                      minimum:
                        type: float
                      exclusiveMinimum:
                        type: float
                      enum:
                        type: array
                      items:
                        type: string
                      required:
                        type: boolean
                      updatable:
                        type: boolean
                      displayType:
                        type: string
                      displayGroup:
                        type: string

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: jobstates.automationbroker.io
spec:
  group: automationbroker.io
  version: v1
  scope: Namespaced
  names:
    plural: jobstates
    singular: jobstate
    kind: JobState
  validation:
   # openAPIV3Schema is the schema for validating custom objects.
   # Token is the name of the resource
    openAPIV3Schema:
      properties:
        state:
          type: string
        podName:
          type: string
        method:
          type: string
        error:
          type: string
        description:
          type: string

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: servicebindings.automationbroker.io
spec:
  group: automationbroker.io
  version: v1
  scope: Namespaced
  names:
    plural: servicebindings
    singular: servicebinding
    kind: ServiceBinding
  validation:
   # openAPIV3Schema is the schema for validating custom objects.
    openAPIV3Schema:
      serviceInstanceId:
        type: string
      parameters:
        type: string
      JobToken:
        type: string

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: serviceinstances.automationbroker.io
spec:
  group: automationbroker.io
  version: v1
  scope: Namespaced
  names:
    plural: serviceinstances
    singular: serviceinstance
    kind: ServiceInstance
  validation:
   # openAPIV3Schema is the schema for validating custom objects.
    openAPIV3Schema:
      properties:
        spec:
          properties:
            specId:
              type: string
            context:
              type: object
              properties:
                plateform:
                  type: string
                namespace:
                  type: string
            parameters:
              type: string
            bindingIds:
              type: array
              items:
                type: string
